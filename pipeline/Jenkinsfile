pipeline {
  agent {
    label 'helm-slave'
  }
  environment {
    AUTHOR_NAME = sh (
      script: "git show -s | grep Author | awk '{print \$2 \" \" \$3}'",
      returnStdout: true
    )

    GIT_COMMIT_HASH = sh (
      script: "git log -n 1 --pretty=format:'%H'", 
      returnStdout: true
    )


    COMMIT_MESSAGE = sh (
      script: "git log --format=%B -n 1 HEAD",
      returnStdout: true
    )
    branch = "${BRANCH_NAME}"
    PROD_VERSION = sh (
      script: "kubectl get pod --selector=app=oldmanmilliner --namespace prod -ojsonpath='{.items[*].metadata.labels.release}'",
      returnStdout: true
    )
    DEV_VERSION = sh (
      script: "kubectl get pod --selector=app=oldmanmilliner --namespace dev -ojsonpath='{.items[*].metadata.labels.release}'",
      returnStdout: true
    )
  }
  stages {

    stage('Starting pipeline run') {
      steps {
        slackSend (color: '#333CFF', message: ":checkered_flag: <${env.BUILD_URL}|artsncraft-pipeline ${env.BUILD_NUMBER}> executing for commit <https://github.com/artsncrafts-valencia/bestwebsiteever/commit/${GIT_COMMIT_HASH}|${GIT_COMMIT_HASH}> \n_Branch_ [ ${BRANCH_NAME} ] \n_Commiter_ $AUTHOR_NAME _Message_ ```${COMMIT_MESSAGE}```")
      }
    }
    stage('Dev helm init') {
      when {
        branch 'development'
      }
      steps {
        sh """
          helm lint -f /helm/oldmanmilliner/values/dev-values.yaml helm/oldmanmilliner/
        """
      }
    }
    stage('Prod helm init') {
      when {
        branch 'master'
      }
      steps {
        sh """
           helm lint helm/oldmanmilliner --values=helm/oldmanmilliner/values/prod-values.yaml
        """
      }
    }
    stage('development helm dry run'){
      when {
        branch 'development'
      }
      steps {
        sh """
          helm upgrade -f helm/oldmanmilliner/values/dev-values.yaml $DEV_VERSION helm/oldmanmilliner/ --namespace dev --dry-run --debug 
        """
      }
    }
    stage('production helm dry run'){
      when {
        branch 'master'
      }
      steps {
        sh """
          helm upgrade -f helm/oldmanmilliner/values/prod-values.yaml $PROD_VERSION helm/oldmanmilliner/ --namespace prod --dry-run --debug 
        """
      }
    }
    stage('helm deploy to development environment'){
      when {
        branch 'development'
      }
      steps {
        sh """
          kubectl delete configmap html-files -ndev 
          kubectl create configmap html-files --from-file helm/oldmanmilliner/html/ -ndev
          helm upgrade -f  helm/oldmanmilliner/values/dev-values.yaml $DEV_VERSION helm/oldmanmilliner/ --namespace dev --debug
        """
      }
    }
    stage('helm deploy to production environment'){
      when {
        branch 'master'
      }
      steps {
        sh """
          kubectl delete configmap html-files -nprod
          kubectl create configmap html-files --from-file helm/oldmanmilliner/html/ -nprod
          helm upgrade -f  helm/oldmanmilliner/values/prod-values.yaml $PROD_VERSION helm/oldmanmilliner/ --namespace prod --debug
        """
      }
    }
  }
  post {
    success {
      slackSend (color: '#00FF00', message: ":heavy_check_mark: <${env.BUILD_URL}|artsncraft-pipeline ${env.BUILD_NUMBER}> SUCCEEDED for <https://github.com/artsncrafts-valencia/bestwebsiteever/commit/${GIT_COMMIT_HASH}|${GIT_COMMIT_HASH}> on [${BRANCH_NAME}] \nWay to be a hero $AUTHOR_NAME:unicorn_face:")
    }
    failure {
      slackSend (color: '#FF0000', message: ":boom: <${env.BUILD_URL}|artsncraft-pipeline ${env.BUILD_NUMBER}> FAILED for <https://github.com/artsncrafts-valencia/bestwebsiteever/commit/${GIT_COMMIT_HASH}|${GIT_COMMIT_HASH}> on [${BRANCH_NAME}]\n Looking at you $AUTHOR_NAME:eyes:")
    }
  }
}
